<?xml version="1.0"?>
<robot name="Roboto" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- /////////////////////////////////////////////////////////////////-->

<!-- Include materials-->

<material name="Black">
   <color rgba="0.0 0.0 0.0 1.0"/>
</material>

<material name="White">
   <color rgba="1.0 1.0 1.0 1.0"/>
</material>

<!-- /////////////////////////////////////////////////////-->

<!-- constants -->
<xacro:property name="deg_to_rad" value="0.017453"/>
<xacro:property name="PI" value="3.14"/>

<!-- chassis property -->
<xacro:property name="chassis_len" value=".835"/>
<xacro:property name="chassis_width" value=".515"/>
<xacro:property name="chassis_height" value="0.46"/>


<!-- wheel property -->
<xacro:property name="wheel_radius" value="0.077"/>
<xacro:property name="wheel_width" value="0.04"/>
<xacro:property name="wheel_height" value="0.154"/>
<xacro:property name="wheel_mass" value="2"/>


<xacro:property name="link_name" value="cam_link"/>
<xacro:property name="camera_name" value="kinect"/>
<xacro:property name="frame_name" value="camera_link"/>


<!-- /////////////////////////////////////////////////////-->
<xacro:macro name="cylinder_inertia" params ="m r h">
  <inertial>
   <mass value="${m}"/>
   <inertia ixx="${m*(3*r*r+h*h)/12}"  ixy="0.0" ixz="0.0"
            iyy="${m*(3*r*r+h*h)/12}"  iyz= "0.0"
            izz="${m*r*r/2}"/>
   </inertial>
</xacro:macro>

<!-- ///////////////////////////////////////////////////-->

<xacro:macro name= "inertial_matrix" params="mass">
  <inertial>
    <mass value="${mass}"/>
      <inertia ixx="1.0" ixy="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0" ixz="0.0"/>
   </inertial>
 </xacro:macro>

<!-- ////////////////////////////////////////////////////-->

<!--transmission block-->

<xacro:macro name="Transmission_block" params="joint_name">
   <transmission name="${joint_name}_trans">
    <type>transmission_interface/SimpleTransmission</type>
     <joint name="${joint_name}">
       <hardwareInterface>PositionJointInterface </hardwareInterface>
      

     </joint>
    <actuator name="${joint_name}_motor">
      <mechanicalReduction>1</mechanicalReduction>
     </actuator>
    </transmission>
 </xacro:macro>

<!-- //////////////////////////////////////////////////// -->

<!-- ////////////////////////////////////////////////////////////-->

<!-- chassis-->

 <link name="chassis">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.2"/>
      <geometry>
         <!--<mesh filename="package://diff_drive/meshes/base assembly.dae"/> -->
          <box size="${chassis_len} ${chassis_width}  ${chassis_height} " />
       </geometry>
     </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.2"/>
      <geometry>
          <!--<mesh filename="package://diff_drive/meshes/base assembly.dae"/>-->
           <box size="${chassis_len} ${chassis_height} ${chassis_width} " />
      </geometry>
    </collision>
   <xacro:inertial_matrix mass="20.0"/>
 
 <!--////////////////////////////////Caster wheel/////////////////////////////////////////////////////////////-->
      <collision name='caster_collision1'>
            <origin rpy="-${PI/2} 0 ${PI/2}" xyz="-0.23 0 0"/>
            <geometry>
              <sphere radius="${wheel_radius-0.015}" />
              
          </geometry>

          <surface>
            <friction>
              <ode>
                <mu>0</mu>
                <mu2>0</mu2>
                <slip1>1.0</slip1>
                <slip2>1.0</slip2>
              </ode>
            </friction>
          </surface>
        </collision>

        <visual name='caster_visual1'>
          <origin rpy="-${PI/2} 0 ${PI/2}" xyz="-0.23 0 0"/>
          <geometry>
            <sphere radius="${wheel_radius}" />
          </geometry>
        </visual>
         <collision name='caster_collision2'>
            <origin rpy="-${PI/2} 0 ${PI/2}" xyz="0.23 0 0"/>
            <geometry>
              <sphere radius="${wheel_radius-0.015}" />
              
          </geometry>

          <surface>
            <friction>
              <ode>
                <mu>0</mu>
                <mu2>0</mu2>
                <slip1>1.0</slip1>
                <slip2>1.0</slip2>
              </ode>
            </friction>
          </surface>
        </collision>

        <visual name='caster_visual2'>
          <origin rpy="-${PI/2} 0 ${PI/2}" xyz="0.23 0 0"/>
          <geometry>
            <sphere radius="${wheel_radius}" />
          </geometry>
        </visual>
 <!--/////////////////////////////////////////////////////////////////////////////////////////////-->
 </link>

 <gazebo reference="chassis">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
<!-- ///////////////////      Wheels      ///////////////////////   -->





<xacro:macro name="wheel" params= "prefix suffix X Y Z">
  <link name= "${prefix}_${suffix}_wheel">
    <visual>
     <origin rpy= "${PI/2} 0 0" xyz= "0 0 0"/>
     <geometry><cylinder length="${wheel_width}" radius= "${wheel_radius}"/></geometry>
     <material name= "Black"/>
    </visual>
    <collision>
     <origin rpy= "${PI/2} 0 0" xyz= "0 0 0"/>
     <geometry><cylinder length="${wheel_width}" radius= "${wheel_radius}"/></geometry>
    </collision>
  <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
  </link>
  <!---->
 <link name= "${prefix}_${suffix}_wheel1">
    <visual>
     <origin rpy= "${PI/2}  ${PI/2} 0" xyz= "0 0 0"/>
     <geometry>
     <!--<mesh filename="package://diff_drive/meshes/tyre11.dae"/>-->
      <cylinder length="${wheel_width}" radius="${wheel_radius}" />
     </geometry>
     <material name= "Black"/>
    </visual>
    <collision>
     <origin rpy= "${PI/2} ${PI/2} 0" xyz= "0 0 0"/>
     <geometry>
     <!--<mesh filename="package://diff_drive/meshes/tyre11.dae"/>-->
    <cylinder length="${wheel_width}" radius="${wheel_radius}" />
     </geometry>
    </collision>
  <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
  </link>
      
  <gazebo reference ="${prefix}_${suffix}_wheel1">
     <material>Gazebo/Black</material>
     <turnGravityOff>false</turnGravityOff>
  </gazebo> 

  <joint name="${prefix}_${suffix}_wheel_joint1" type= "fixed">
    <parent link="${prefix}_${suffix}_wheel"/>
    <child link= "${prefix}_${suffix}_wheel1"/>
    <origin xyz="0 0 0"  rpy="0 0 0"/>
  </joint>

<gazebo reference ="${prefix}_${suffix}_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value= "1.0"/>
    <material>Gazebo/Black</material>
</gazebo>

<joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
  <parent link= "chassis"/>
  <child link= "${prefix}_${suffix}_wheel"/>
  <origin xyz= "${0.062*X-0.058*Y} ${(chassis_width/2+0.01)*Z}  0.015" rpy="0 0 0"/>
  <axis xyz="0 1 0"/>
  <limit effort= "100" velocity="100"/>
  <dynamics damping="0.0" friction="0.0"/>  
</joint>

 <transmission name="${prefix}_${suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>7</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
 </transmission>
</xacro:macro>

<xacro:wheel prefix="right" suffix="front" X="0" Y="0" Z="-1"/>
<!--<xacro:wheel prefix="right" suffix="back" X="0" Y="1" Z="-1"/>-->
<xacro:wheel prefix="left" suffix="front" X="0" Y="0" Z="1"/>
<!--<xacro:wheel prefix="left" suffix="back" X="0" Y="1" Z="1"/> -->


<!--///////////////////////////////////////////////////////////////// -->
<link name="hokuyo_sensor">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
     <box size="0.05 0.05 0.05"/>
   </geometry>
   <material name="Blue"/>
   </visual>
   <collision>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
     <box size="0.05 0.05 0.05"/>
   </geometry>
   </collision>
 </link>

<joint name="hokuyo_joint" type="fixed">
  <origin xyz="${chassis_len/2} 0 ${chassis_height+0.065}" rpy="0 0 0"/>
  <parent link="chassis"/>
  <child link="hokuyo_sensor"/>
</joint>

<gazebo reference="hokuyo_sensor">
  <material>Gazebo/Blue</material>
  <turnGravityOff>false</turnGravityOff>
  <sensor type="ray" name="chassis_hokuyo_sensor">
   <pose>0 0 0 0 0 0</pose>
   <visualize>false</visualize>
   <update_rate>40</update_rate>
   <ray>
     <scan>
       <horizontal>
         <samples>720</samples>
         <resolution>1</resolution>
         <min_angle>-3.00</min_angle>
         <max_angle>3.00</max_angle>  
        </horizontal>
      </scan>
     <range>
        <min>0.05</min>
        <max>10.0</max>
        <resolution>0.001</resolution>
      </range>
     </ray>
     <plugin name="gazebo_ros_head_hokuyo_controller" 
          filename="libgazebo_ros_laser.so">
        <topicName>/scan_gazebo</topicName>
        <frameName>hokuyo_sensor</frameName>
       </plugin>
      </sensor>
     </gazebo>   



<!-- //////////////////////////////////////////////////////////////// -->

<!-- ros_control plugin-->

<!--gazebo>
  <plugin name="gazebo_ros_control" filename= "libgazebo_ros_control.so">
   <robotNamespace>/</robotNamespace>
   <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
  </plugin>
</gazebo-->

<gazebo>
    <plugin name="gazebo_ros_control" 
            filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
      <robotParam>/robot_description</robotParam>
       <updateRate>20.0</updateRate>
      <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
    </plugin>
  </gazebo>




  <!--
    The plugin broadcasts a body's pose and rates through ROS nav_msgs::Odometry message.
    The plugin broadcasts pose and rate of a body named "chassis" over ROS topic name "my_robot/odom".
  -->

  <link name="${link_name}">
      <inertial>
        <mass>0.1</mass>
      </inertial>
      <collision name="collision">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box>
            <size>0.073000 0.276000 0.072000</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual">
       
        <geometry>
          <mesh>
            <uri>model://kinect/meshes/kinect.dae</uri>
          </mesh>
        </geometry>
      </visual>
      </link>
  
  
  
  <gazebo reference="${link_name}">
  <sensor name="${link_name}_camera" type="depth">
    <update_rate>5</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>120</width>
        <height>100</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>${camera_name}_ir</cameraName>
      <imageTopicName>/${camera_name}/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/${camera_name}/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
      <frameName>${frame_name}</frameName>
      <pointCloudCutoff>0.1</pointCloudCutoff>
      <pointCloudCutoffMax>2.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

<joint name="${link_name}_joint" type="fixed">
  <origin xyz="${chassis_len/2} 0 ${chassis_height+0.1}" rpy="0 0 0"/>
  <parent link="chassis"/>
  <child link="${link_name}"/>
</joint>

</robot>
